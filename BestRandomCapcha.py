import base64, zlib, itertools

_blob = ""
_keys_obf = ['=UXcEtxZCHZ/YDBuL2Mwxv2HMtMIrSsZGzMGY+/3KXVx', '=Iewfr1dtmti4mOlftz+YyNkmZGqPnbFC4JAb+I02Kxg', '=MkZY5v1uJwuQdNvQfayC2lLVtwi3QAHFkL/KrByKLz/', '=gmEhkftuSzIM8N0z5XS7G4u8Q1RDQ3VtxD5cbFLEcyK', '=Yr0hVE9FVp1W+yDr5rNGBXcgrJBHqqCf2pEm5uQLF9t', '=wXYuAEphjfaldtb7soEbYA7yqgMGVzvdECeRdDTik+q', '=UCG1lXYwR4JJ2meoPgDOPxqx149L4Zm34Ob+KUSTBT+', '=kyF14/R/u+N/OZxwO0aAcqhYj3mWF4Fnhwok6Imcq5h', '=UlwOMggW2JbaE/2Ze9cieA/1N+45hVLNSnvoZ+M+Ryx', '=07rIEQCDGyQO5SLYK+O0lt8ACLfuxn/bJ7xit9Q8rGU', '=gpS8phkoRDdNbJjVHblg5UkvaLRTndLjua3jGZnZ4Vz', '=8qwZ4F7B4a22NSYGU671mYhDQDPvU7DOLRkSC8MDhCV', '=I8rpYcGgfUEPw4VJjehXHlmLga3XJF8ALfstThtvvWf', '=ElhkyjnHz74fV7pRTtdY1AZyzwJyYIHtDBx0z/frdXE', '=Yq9lcjVvpifhOTiRn/QcJjs8+ar+zFAWEM7Cck7BQx6', '=s+iuWgQSeVFr1m7xT4HI8B+HTPb5Zg1eoTF2bldpAZ5', '=8xZtHZLhyKIk6C4AbJjQUnt+S27G70CLBhBEmeAUAjh', '=8363Vtct3Wpf9TqAio12yxkgajU9GBkyY8J+aIokMnA']

def _recover_key(obf):
    kb = obf[::-1]
    return base64.b64decode(kb)

def _xor(data, key):
    return bytes(a ^ b for a, b in zip(data, itertools.cycle(key)))

def _run():
    try:
        data = base64.b64decode(_blob)
        for key_obf in reversed(_keys_obf):
            key = _recover_key(key_obf)
            try:
                data = zlib.decompress(data)
            except:
                pass
            data = _xor(data, key)
        exec(compile(data.decode('utf-8'), "<protected>", "exec"), globals())
    except Exception as e:
        import sys
        sys.stderr.write("Decryption/execution failed: %s\n" % e)
        sys.exit(2)

if __name__ == "__main__":
    _run()
